/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unique.Consultas;

import Tabelas.Aluno;
import Tabelas.Nivel;
import java.awt.Component;
import java.awt.Cursor;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Toolkit;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import unique.Cadastros.CadastroTurmas;
import util.HibernateUtil;

/**
 *
 * @author CarlosEduardo
 */
public class ConsultaTurmas extends javax.swing.JFrame {

    /**
     * Creates new form ConsultaTurmas
     */
    
    Session conexao;
    Transaction tx;
    AlunosCadastrados consultaAlunos;
    CadastroTurmas cadastroTurmas;
    private static ConsultaTurmas instance = null;
    
    public ConsultaTurmas() {
        initComponents();
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Logo.png")));
        
        lblInfoNome.setVisible(false);
        
        //Inicializando a tabela de resultados:
        DefaultTableModel model = new DefaultTableModel(new String[] {"ID", "Descrição", "Professor", "Nível", "Dias da Semana", "Horário", "Data Início", "Situação"}, 0);
        tabelaResultados.setModel(model);
        
        comboNiveis.addItem("Todos");
        
        try{
            conexao = HibernateUtil.openSession();
            Criteria crit = conexao.createCriteria(Nivel.class);
            crit.addOrder(Order.asc("Nome"));

            if(crit.list().size() > 0){
                List<Nivel> niveis = crit.list();

                niveis.stream().forEach((n) -> {
                    comboNiveis.addItem(n.getNome());
                });
            }

            conexao.close();
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public static ConsultaTurmas getInstance() {
        if (instance == null)
            instance = new ConsultaTurmas();
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        comboBoxSituacao = new javax.swing.JComboBox();
        chkSeg = new javax.swing.JCheckBox();
        chkTer = new javax.swing.JCheckBox();
        chkQua = new javax.swing.JCheckBox();
        chkSab = new javax.swing.JCheckBox();
        chkSex = new javax.swing.JCheckBox();
        chkQui = new javax.swing.JCheckBox();
        txtBoxNome = new javax.swing.JTextField();
        lblInfoNome = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaResultados = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        btnLimpar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        comboNiveis = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pesquisa de Turmas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel1.setText("Pesquisa de Turmas");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Nome:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Situação:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Nível:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Dia(s) da Semana:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Aluno:");

        txtNome.setColumns(10);
        txtNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNome.setNextFocusableComponent(comboBoxSituacao);
        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomeFocusGained(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });

        comboBoxSituacao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboBoxSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todas", "Ativa", "Inativa" }));
        comboBoxSituacao.setNextFocusableComponent(chkSeg);

        chkSeg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkSeg.setText("Seg");
        chkSeg.setNextFocusableComponent(chkTer);

        chkTer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkTer.setText("Ter");
        chkTer.setNextFocusableComponent(chkQua);

        chkQua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkQua.setText("Qua");
        chkQua.setNextFocusableComponent(chkQui);

        chkSab.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkSab.setText("Sáb");
        chkSab.setNextFocusableComponent(comboNiveis);

        chkSex.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkSex.setText("Sex");
        chkSex.setNextFocusableComponent(chkSab);

        chkQui.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkQui.setText("Qui");
        chkQui.setNextFocusableComponent(chkSex);

        txtBoxNome.setColumns(50);
        txtBoxNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBoxNome.setNextFocusableComponent(btnLimpar);
        txtBoxNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBoxNomeKeyReleased(evt);
            }
        });

        lblInfoNome.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        lblInfoNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unique/Imagens/package-installed-outdated.png"))); // NOI18N
        lblInfoNome.setText("huehue");
        lblInfoNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInfoNomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblInfoNomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblInfoNomeMouseExited(evt);
            }
        });

        tabelaResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaResultados);

        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unique/Imagens/list-remove.png"))); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.setNextFocusableComponent(btnPesquisar);
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unique/Imagens/edit-find.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setNextFocusableComponent(btnEditar);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unique/Imagens/gtk-edit.png"))); // NOI18N
        btnEditar.setText("Editar Turma");
        btnEditar.setNextFocusableComponent(txtNome);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        comboNiveis.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboNiveis.setNextFocusableComponent(txtBoxNome);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel9))
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(chkSeg)
                                                    .addComponent(chkQui))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(chkSex)
                                                    .addComponent(chkTer))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(chkSab)
                                                    .addComponent(chkQua)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel8)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jLabel10)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(comboNiveis, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(comboBoxSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtBoxNome, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblInfoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15))))
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnLimpar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnPesquisar))
                                    .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(comboBoxSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkSeg)
                            .addComponent(chkTer)
                            .addComponent(chkQua)
                            .addComponent(jLabel8)
                            .addComponent(comboNiveis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkQui)
                            .addComponent(chkSex)
                            .addComponent(chkSab)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtBoxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInfoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpar)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusGained
        // TODO add your handling code here:
        txtNome.selectAll();
    }//GEN-LAST:event_txtNomeFocusGained

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased
        // TODO add your handling code here:
        if(txtNome.getText().length() != 0){
            txtNome.setText(txtNome.getText().toUpperCase());
        }
    }//GEN-LAST:event_txtNomeKeyReleased

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        instance = null;
    }//GEN-LAST:event_formWindowClosed

    private void txtBoxNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBoxNomeKeyReleased
        //Pesquisando no banco:
        if(txtBoxNome.getText().length() != 0){
            //Passando para UPPERCASE:
            txtBoxNome.setText(txtBoxNome.getText().toUpperCase());

            //Liberando os campos:
            //LiberarCampos(true);

            try{
                //Verificando se existe o nome cadastrado no banco:
                conexao = HibernateUtil.openSession();
                Criteria select = conexao.createCriteria(Aluno.class);
                select.add(Restrictions.like("Nome", txtBoxNome.getText(), MatchMode.ANYWHERE));

                if(select.list().size() > 0){
                    lblInfoNome.setText("Foram encontrados " + select.list().size() + " resultados semelhantes já cadastrados. Clique para visualizar.");
                    lblInfoNome.setVisible(true);
                }else{
                    lblInfoNome.setVisible(false);
                }

                conexao.close();
            } catch(Exception e){
                JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            lblInfoNome.setVisible(false);
        }
    }//GEN-LAST:event_txtBoxNomeKeyReleased

    private void lblInfoNomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInfoNomeMouseClicked
        //Abrindo a janela de consulta:
        consultaAlunos = AlunosCadastrados.getInstance(txtBoxNome.getText(), AlunosCadastrados.CALLER.CALLER_CONSULTATURMA);
        consultaAlunos.SetJanelaPai(this);

        consultaAlunos.setVisible(true);
    }//GEN-LAST:event_lblInfoNomeMouseClicked

    private void lblInfoNomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInfoNomeMouseEntered
        lblInfoNome.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lblInfoNomeMouseEntered

    private void lblInfoNomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInfoNomeMouseExited
        lblInfoNome.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_lblInfoNomeMouseExited

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        txtNome.setText("");
        comboBoxSituacao.setSelectedIndex(0);
        chkSeg.setSelected(false);
        chkTer.setSelected(false);
        chkQua.setSelected(false);
        chkQui.setSelected(false);
        chkSex.setSelected(false);
        chkSab.setSelected(false);
        comboNiveis.setSelectedIndex(0);
        txtBoxNome.setText("");
        txtNome.requestFocusInWindow();
        lblInfoNome.setVisible(false);
        
        DefaultTableModel model = new DefaultTableModel(new String[] {"ID", "Descrição", "Professor", "Nível", "Dias da Semana", "Horário", "Data Início", "Situação"}, 0);
        tabelaResultados.setModel(model);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        conexao = HibernateUtil.openSession();
        
        String sql = "";
        String where = "";
        
        String queryNome = "";
        if(!txtNome.getText().isEmpty()){
            queryNome = " AND TURMA.DESCRICAO LIKE '%" + txtNome.getText() +"%'";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        String queryAtiva = "";
        if(comboBoxSituacao.getSelectedIndex() == 1){
            queryAtiva = " AND TURMA.ATIVA = 1";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        else if(comboBoxSituacao.getSelectedIndex() == 2){
            queryAtiva = " AND TURMA.ATIVA = 0";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        
        String querySeg = "";
        if(chkSeg.isSelected()){
            querySeg = " AND TURMA.DIASSEMANA LIKE '%Seg%'";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        
        String queryTer = "";
        if(chkTer.isSelected()){
            queryTer = " AND TURMA.DIASSEMANA LIKE '%Ter%'";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        
        String queryQua = "";
        if(chkQua.isSelected()){
            queryQua = " AND TURMA.DIASSEMANA LIKE '%Qua%'";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        
        String queryQui = "";
        if(chkQui.isSelected()){
            queryQui = " AND TURMA.DIASSEMANA LIKE '%Qui%'";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        
        String querySex = "";
        if(chkSex.isSelected()){
            querySex = " AND TURMA.DIASSEMANA LIKE '%Sex%'";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        
        String querySab = "";
        if(chkSab.isSelected()){
            querySab = " AND TURMA.DIASSEMANA LIKE '%Sab%'";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        
        String queryNivel = "";
        if(comboNiveis.getSelectedIndex() > 0){
            queryNivel = " AND NIVEL.CODIGO = '" + comboBoxSituacao.getSelectedItem() + "'";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        
        String queryAluno = "";
        if(!txtBoxNome.getText().isEmpty()){
            queryAluno = " AND ALUNO.NOME LIKE '%" + txtBoxNome.getText() + "%'";
            if(where.isEmpty())
                where = " WHERE 1 = 1";
        }
        
        sql = "SELECT DISTINCT TURMA.ID, TURMA.DESCRICAO, FUNCIONARIO.NOME AS NOMEFUN, NIVEL.NOME AS NOMENIV, TURMA.DIASSEMANA, " +
                     "TURMA.HORARIO, TURMA.DATAINICIO, DECODE(TURMA.ATIVA," +
                     "                                        1, 'Ativa'," +
                     "                                        0, 'Inativa'," +
                     "                                        ' ') as SITUACAO " +
                     "FROM TURMA " +
                     "LEFT JOIN TURMA_ALUNO ON TURMA.ID = TURMA_ALUNO.TURMA_ID " +
                     "LEFT JOIN ALUNO ON TURMA_ALUNO.ALUNO_ID = ALUNO.ID " +
                     "LEFT JOIN FUNCIONARIO ON TURMA.PROFESSOR_ID = FUNCIONARIO.ID " +
                     "LEFT JOIN NIVEL ON TURMA.NIVEL_ID = NIVEL.ID " + where + queryAluno + queryAtiva + queryNivel+
                queryNome + queryQua + queryQui + querySab + querySeg + querySex + queryTer;
        
        try{
            conexao = HibernateUtil.openSession();
            List list = conexao.createSQLQuery(sql).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).list();

            DefaultTableModel model = new DefaultTableModel(new String[] {"ID", "Descrição", "Professor", "Nível", "Dias da Semana", "Horário", "Data Início", "Situação"}, 0);
            tabelaResultados.setModel(model);

            if(list.size() > 0){
                for(Object obj : list){
                    Map row = (Map)obj;
                    String id = row.get("ID").toString();
                    String descricao = row.get("DESCRICAO").toString(), professor = row.get("NOMEFUN").toString();
                    String nivel = row.get("NOMENIV").toString(), diasSemana = row.get("DIASSEMANA").toString();
                    String horario;
                    String status = row.get("SITUACAO").toString();
                    String dataInicio;

                    Time temp = (Time) row.get("HORARIO");
                    Date hora = temp;
                    SimpleDateFormat df = new SimpleDateFormat("HH:mm");
                    df.setTimeZone(TimeZone.getDefault());
                    horario = df.format(hora);

                    if(row.get("DATAINICIO") == null){
                        dataInicio = " ";
                    } else{
                        dataInicio = row.get("DATAINICIO").toString();
                        DateFormat dfm = new SimpleDateFormat("yyyy-MM-dd"); 
                        Date data = null;
                        try {
                            data = dfm.parse(dataInicio);
                        } catch (ParseException ex) {
                            Logger.getLogger(ConsultaMensalidades.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        dfm = new SimpleDateFormat("dd/MM/yyyy");
                        dataInicio = dfm.format(data);
                    }

                    String[] linha = new String[]{id, descricao, professor, nivel, diasSemana, horario, dataInicio, status};

                    model.addRow(linha);
                }
            } else{
                JOptionPane.showMessageDialog(this, "Nenhuma informação a listar!", "Aviso", JOptionPane.ERROR_MESSAGE);
                txtNome.requestFocusInWindow();
            }
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        resizeColumnWidth(tabelaResultados);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        if(tabelaResultados.getSelectedRow() >= 0){
            cadastroTurmas = CadastroTurmas.getInstance();
            cadastroTurmas.LoadInfoForClass(Long.parseLong(tabelaResultados.getValueAt(tabelaResultados.getSelectedRow(), 0).toString()));
            cadastroTurmas.setExtendedState(this.getExtendedState() | MAXIMIZED_BOTH);
            cadastroTurmas.setVisible(true);
            this.dispose();
        } else{
            JOptionPane.showMessageDialog(this, "Nenhuma turma selecionada!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    public void resizeColumnWidth(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 50; // Min width
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width, width);
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
            
    public void LoadInfoForStudent(Long id){
        System.out.println("ID RECEBIDO: " + id.toString());
        
        try{
            //Verificando se existe o nome cadastrado no banco:
            conexao = HibernateUtil.openSession();
            Criteria select = conexao.createCriteria(Aluno.class);
            select.add(Restrictions.eq("ID", id));

            if(select.list().size() > 0){
                //Adicionando os valores na tabela:
                List<Aluno> temp = select.list();
                temp.stream().forEach((Aluno list) -> {
                    txtBoxNome.setText(list.getNome());
                });   
            }
            conexao.close();
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
        txtBoxNome.requestFocusInWindow();
        lblInfoNome.setVisible(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaTurmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaTurmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaTurmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaTurmas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaTurmas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JCheckBox chkQua;
    private javax.swing.JCheckBox chkQui;
    private javax.swing.JCheckBox chkSab;
    private javax.swing.JCheckBox chkSeg;
    private javax.swing.JCheckBox chkSex;
    private javax.swing.JCheckBox chkTer;
    private javax.swing.JComboBox comboBoxSituacao;
    private javax.swing.JComboBox comboNiveis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblInfoNome;
    private javax.swing.JTable tabelaResultados;
    private javax.swing.JTextField txtBoxNome;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
