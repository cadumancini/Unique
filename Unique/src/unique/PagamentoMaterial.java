/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unique;

import unique.Consultas.AlunosCadastrados;
import Tabelas.Aluno;
import Tabelas.Config;
import Tabelas.Mensalidade;
import Tabelas.PagtoMaterial;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Restrictions;
import util.HibernateUtil;

/**
 *
 * @author arlorencini
 */
public class PagamentoMaterial extends javax.swing.JFrame {
    
    Session conexao = null;    
    Config configuracoes = null;
    private static PagamentoMaterial instance = null;
    
    /**
     * Creates new form PagamentoParcela
     */
    private PagamentoMaterial() {
        initComponents();
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Logo.png")));
        this.setLocationRelativeTo(null);   
        lblInfoNome.setVisible(false);
        
        comboPagtoCheque.addActionListener((ActionEvent e) -> {
            MudouItemComboCheque(e); 
        });
        
        idAlunoSelecionado = 0;
        try{
            //Buscando as configurações atuais:
            conexao = HibernateUtil.openSession();
            Criteria select = conexao.createCriteria(Config.class);
            select.add(Restrictions.eq("ID", 1L));

            if(select.list().size() > 0){
                configuracoes = (Config)select.list().get(0);
            }

            txtValorPagoMaterial.setText("0.000,00");

            conexao.close();
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public static PagamentoMaterial getInstance() {
        if (instance == null)
            instance = new PagamentoMaterial();
        return instance;
    }
    
    private void MudouItemComboCheque(ActionEvent e) {
        if(comboPagtoCheque.getSelectedIndex() > 0) {
            txtNumeroCheque.setEnabled(true);
            txtDataCompensacao.setEnabled(true);
        } else{
            txtNumeroCheque.setText("");
            txtNumeroCheque.setEnabled(false);
            txtDataCompensacao.setText("");
            txtDataCompensacao.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txtBoxNome = new javax.swing.JTextField();
        lblInfoNome = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnEfetuaPagamento = new javax.swing.JToggleButton();
        btnCancelar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        comboPagtoCheque = new javax.swing.JComboBox();
        txtNumeroCheque = new javax.swing.JTextField();
        txtDataCompensacao = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        lblValorAbertoMaterial = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtValorPagoMaterial = new javax.swing.JFormattedTextField();

        jLabel12.setText("R$ 000,000,00");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pagamento de Material");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel1.setText("Pagamentos de Material");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Nome do Aluno:");

        txtBoxNome.setColumns(50);
        txtBoxNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBoxNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBoxNomeKeyReleased(evt);
            }
        });

        lblInfoNome.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        lblInfoNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unique/Imagens/package-installed-outdated.png"))); // NOI18N
        lblInfoNome.setText("huehue");
        lblInfoNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInfoNomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblInfoNomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblInfoNomeMouseExited(evt);
            }
        });

        btnEfetuaPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unique/Imagens/dialog-ok.png"))); // NOI18N
        btnEfetuaPagamento.setText("Efetuar Pagamento");
        btnEfetuaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEfetuaPagamentoActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unique/Imagens/list-remove.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Pagamento em cheque?");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Número do cheque:");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Data de Compensação:");

        comboPagtoCheque.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não", "Sim" }));
        comboPagtoCheque.setEnabled(false);

        txtNumeroCheque.setColumns(50);
        txtNumeroCheque.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNumeroCheque.setEnabled(false);
        txtNumeroCheque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumeroChequeKeyReleased(evt);
            }
        });

        txtDataCompensacao.setColumns(10);
        try {
            txtDataCompensacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataCompensacao.setEnabled(false);
        txtDataCompensacao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Valor referente à compra de material (Pendente):");

        lblValorAbertoMaterial.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Valor a ser pago (Material):");

        txtValorPagoMaterial.setColumns(8);
        try {
            txtValorPagoMaterial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#.###,##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtValorPagoMaterial.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValorPagoMaterial.setText("");
        txtValorPagoMaterial.setEnabled(false);
        txtValorPagoMaterial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorPagoMaterialFocusGained(evt);
            }
        });
        txtValorPagoMaterial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtValorPagoMaterialMouseClicked(evt);
            }
        });
        txtValorPagoMaterial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorPagoMaterialKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorPagoMaterialKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBoxNome, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblInfoNome, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEfetuaPagamento))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtValorPagoMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboPagtoCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumeroCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDataCompensacao, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblValorAbertoMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBoxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInfoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(lblValorAbertoMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtValorPagoMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(comboPagtoCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtNumeroCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtDataCompensacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEfetuaPagamento)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBoxNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBoxNomeKeyReleased
        //Pesquisando no banco:
        if(txtBoxNome.getText().length() != 0){
            //Passando para UPPERCASE:
            txtBoxNome.setText(txtBoxNome.getText().toUpperCase());

            //Verificando se existe o nome cadastrado no banco:
            try {
                conexao = HibernateUtil.openSession();
                Criteria select = conexao.createCriteria(Aluno.class);
                select.add(Restrictions.like("Nome", txtBoxNome.getText(), MatchMode.ANYWHERE));

                if(select.list().size() > 0){
                    lblInfoNome.setText("Foram encontrados " + select.list().size() + " resultados semelhantes cadastrados. Clique para visualizar.");
                    lblInfoNome.setVisible(true);
                }else{
                    lblInfoNome.setVisible(false);
                }
            } catch(Exception e){
                JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }

            conexao.close();
        }else{
            lblInfoNome.setVisible(false);
        }
    }//GEN-LAST:event_txtBoxNomeKeyReleased

    private void lblInfoNomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInfoNomeMouseClicked
        AlunosCadastrados consultaAlunos;
        consultaAlunos = AlunosCadastrados.getInstance(txtBoxNome.getText(), AlunosCadastrados.CALLER.CALLER_PAGAMENTOMATERIAL);
        consultaAlunos.SetJanelaPai(this);

        consultaAlunos.setVisible(true);
    }//GEN-LAST:event_lblInfoNomeMouseClicked

    private void lblInfoNomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInfoNomeMouseEntered
        lblInfoNome.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lblInfoNomeMouseEntered

    private void lblInfoNomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInfoNomeMouseExited
        lblInfoNome.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_lblInfoNomeMouseExited

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void btnEfetuaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEfetuaPagamentoActionPerformed
        //Obtendo o aluno:
        conexao = HibernateUtil.openSession();
        Aluno aluno = (Aluno) conexao.get(Aluno.class, idAlunoSelecionado);
        
        //Validando o campo de valor:
        String valorTemp = txtValorPagoMaterial.getText();
        valorTemp = valorTemp.replaceAll("\\.", "");
        valorTemp = valorTemp.replaceAll("\\,", ".");

        if(Double.parseDouble(valorTemp) > totalPagar) {
            JOptionPane.showMessageDialog(this, "Valor informado não pode ser maior que o valor pendente.", "ERRO", JOptionPane.ERROR_MESSAGE);
            txtValorPagoMaterial.requestFocusInWindow();
            return;
        }

        //Obtendo confirmação:
        if(JOptionPane.showConfirmDialog(this, "Confirmar pagamento de R$ " + txtValorPagoMaterial.getText() + ", referentes ao material comprado na escola?" , "Aviso", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION){
            //Efetuando o pagamento:
            Transaction tx = conexao.beginTransaction();

            //Salvando o valor pago na tabela:
            PagtoMaterial material = new PagtoMaterial();
            
            material.setAluno(aluno);
            material.setNivel(aluno.getNivelAtual());
            material.setValorPago(Double.parseDouble(valorTemp));
            
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            Date dataCompen = null;
            
            //Estamos pagando em cheque?
            if(comboPagtoCheque.getSelectedIndex() == 1) {
                material.setNumeroCheque(txtNumeroCheque.getText());
                
                try {
                    dataCompen = DateFormat.getDateInstance().parse(txtDataCompensacao.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(PagamentoMaterial.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                material.setDataCompensacao(dataCompen);
            } else {
                material.setNumeroCheque(null);
                material.setDataCompensacao(null);
            }
            
            String strDataHoje = dateFormat.format(Calendar.getInstance().getTime());
            Date dataHoje = null;
            
            try {
                dataHoje = DateFormat.getDateInstance().parse(strDataHoje);
            } catch (ParseException ex) {
                Logger.getLogger(GerarMensalidades.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            material.setDataPagto(dataHoje);
            
            //Salvando no banco:
            try {
                conexao = HibernateUtil.openSession();
                tx = conexao.beginTransaction();

                conexao.saveOrUpdate(material);
                tx.commit();

                conexao.close();
            } catch(Exception e){
                JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }

            if(conexao.isOpen())
                conexao.close();
            
            JOptionPane.showMessageDialog(this, "Pagamento registrado com sucesso.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            LoadInfoForStudent(idAlunoSelecionado);
        }
    }//GEN-LAST:event_btnEfetuaPagamentoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //Fechando a janela:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtNumeroChequeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroChequeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroChequeKeyReleased

    private void txtValorPagoMaterialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorPagoMaterialFocusGained
        txtValorPagoMaterial.select(txtValorPagoMaterial.getColumns(), txtValorPagoMaterial.getColumns());
    }//GEN-LAST:event_txtValorPagoMaterialFocusGained

    private void txtValorPagoMaterialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtValorPagoMaterialMouseClicked
        // TODO add your handling code here:
        txtValorPagoMaterial.selectAll();
    }//GEN-LAST:event_txtValorPagoMaterialMouseClicked

    private void txtValorPagoMaterialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorPagoMaterialKeyPressed
        // TODO add your handling code here:
        if(!((evt.getKeyChar() == '0') || (evt.getKeyChar() == '1') || (evt.getKeyChar() == '2') ||
            (evt.getKeyChar() == '3') || (evt.getKeyChar() == '4') || (evt.getKeyChar() == '5') ||
            (evt.getKeyChar() == '6') || (evt.getKeyChar() == '7') || (evt.getKeyChar() == '8') ||
            (evt.getKeyChar() == '9')))
    return;
    }//GEN-LAST:event_txtValorPagoMaterialKeyPressed

    private void txtValorPagoMaterialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorPagoMaterialKeyTyped
        // TODO add your handling code here:
        String temp = txtValorPagoMaterial.getText();

        if(((evt.getKeyChar() == '0') || (evt.getKeyChar() == '1') || (evt.getKeyChar() == '2') ||
            (evt.getKeyChar() == '3') || (evt.getKeyChar() == '4') || (evt.getKeyChar() == '5') ||
            (evt.getKeyChar() == '6') || (evt.getKeyChar() == '7') || (evt.getKeyChar() == '8') ||
            (evt.getKeyChar() == '9')) && (temp.startsWith("0")))
    {
        temp = temp.replaceAll("\\,|\\.", "");
        temp = temp.substring(1);

        StringBuilder builder = new StringBuilder(temp);
        builder.insert(1, '.');
        builder.insert(5, ',');
        temp = builder.toString();

        txtValorPagoMaterial.setText(temp);
        }
        else if(evt.getKeyChar() == 8) //Backspace
        {
            temp = temp.replaceAll("\\,|\\.", "");
            temp = '0' + temp;

            StringBuilder builder = new StringBuilder(temp);
            builder.insert(1, '.');
            builder.insert(5, ',');
            temp = builder.toString();

            txtValorPagoMaterial.setText(temp);
        }
    }//GEN-LAST:event_txtValorPagoMaterialKeyTyped

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        instance = null;
    }//GEN-LAST:event_formWindowClosed
    
    public void LoadInfoForStudent(Long id){
        System.out.println("ID RECEBIDO: " + id.toString());
        idAlunoSelecionado = 0;

        Aluno aluno = null;

        try {
            //Verificando se existe o nome cadastrado no banco:
            conexao = HibernateUtil.openSession();
            Criteria select = conexao.createCriteria(Aluno.class);
            select.add(Restrictions.eq("ID", id));

            if(select.list().size() > 0){
                //Adicionando os valores na tabela:
                aluno = (Aluno)select.list().get(0);
            }

            //Inicializando o Hibernate:
            conexao.close();
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
        //Encontramos um aluno?
        if(aluno != null){
            txtBoxNome.setText(aluno.getNome());
            idAlunoSelecionado = id;
            
            //Esse aluno tem pagamento de material pendente?
            conexao = HibernateUtil.openSession();
            Criteria crit = conexao.createCriteria(PagtoMaterial.class);
            crit.add(Restrictions.eq("Aluno", aluno));
            crit.add(Restrictions.eq("Nivel", aluno.getNivelAtual()));

            try {
                if(crit.list().size() > 0){
                    //Apagando as mensalidades de cursos:
                    List<PagtoMaterial> mensMaterial = crit.list();
                    double valorPago = 0d;
                    
                    for(PagtoMaterial m : mensMaterial) {
                        valorPago += m.getValorPago();
                    }
                    
                    Double valorAberto = aluno.getNivelAtual().getValorMaterial()- valorPago;
                    BigDecimal valor = new BigDecimal(String.valueOf(valorAberto));
                    valor = valor.setScale(2, RoundingMode.UP);
                    totalPagar = valor.doubleValue();
                    lblValorAbertoMaterial.setText("R$ " + valor.toString());
                    
                    txtValorPagoMaterial.setEnabled(true);
                    comboPagtoCheque.setEnabled(true);
                } else{
                    lblValorAbertoMaterial.setText("Nenhuma pendência de pagamentos referentes à Material localizada para esse aluno.");
                    
                    txtValorPagoMaterial.setEnabled(false);
                    comboPagtoCheque.setEnabled(false);
                }
            } catch(Exception e){
                JOptionPane.showMessageDialog(this, "Operação mal sucedida. Motivo: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PagamentoMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PagamentoMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PagamentoMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PagamentoMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PagamentoMaterial().setVisible(true);
        });
    }

    List<Mensalidade> mensalidades;
    long idAlunoSelecionado;
    double totalPagar = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JToggleButton btnEfetuaPagamento;
    private javax.swing.JComboBox comboPagtoCheque;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblInfoNome;
    private javax.swing.JLabel lblValorAbertoMaterial;
    private javax.swing.JTextField txtBoxNome;
    private javax.swing.JFormattedTextField txtDataCompensacao;
    private javax.swing.JTextField txtNumeroCheque;
    private javax.swing.JFormattedTextField txtValorPagoMaterial;
    // End of variables declaration//GEN-END:variables
}
